# 워크플로우 이름 설정
name: CICD Github Action

# 시작 조건
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest # 실행 환경 지정
    
    # 환경 변수 설정 (GitHub Secrets에서 불러오기)
    env:
      RDSHOSTNAME: ${{ secrets.RDSHOSTNAME }}
      RDSNAME: ${{ secrets.RDSNAME }}
      RDSUSERNAME: ${{ secrets.RDSUSERNAME }}
      RDSPASSWORD: ${{ secrets.RDSPASSWORD }}
      RDSPORT: ${{ secrets.RDSPORT }}

    # 실행 스텝 지정
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 네트워크 연결 테스트 단계 추가
      - name: Test RDS Connection
        run: |
          echo "Testing RDS connection..."
          nc -zv ${{ secrets.RDSHOSTNAME }} ${{ secrets.RDSPORT }}

      # 환경 변수 적용을 위한 application.yml 파일 업데이트
      - name: Set application.yml with environment variables
        run: |
          cat <<EOT > ./src/main/resources/application.yml
          spring:
            datasource:
              driver-class-name: com.mysql.cj.jdbc.Driver
              url: jdbc:mysql://${RDSHOSTNAME}:${RDSPORT}/${RDSNAME}?serverTimezone=UTC&characterEncoding=UTF-8
              username: ${RDSUSERNAME}
              password: ${RDSPASSWORD}
          EOT

      - name: 환경변수 설정
        run: echo "${{ secrets.MY_APPLICATION_YML}}" > ./src/main/resources/application.yml
        working-directory: ./server/linode-github-action-test

      - name: build # 경로를 직접 설정하여 빌드 명령을 내려준다.
        run: /root/actions-runner/_work/githubActionTutorial/githubActionTutorial/server/linode-github-action-test/gradlew build
        working-directory: ./server/linode-github-action-test

      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-SS
          utcOffset: "+09:00"

      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV

      # 빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:        
         aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         application_name: bookdochilsung
         environment_name: bookdochilsung-env
         version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
         region: ap-northeast-2
         deployment_package: ./build/libs/${{ env.artifact }}
