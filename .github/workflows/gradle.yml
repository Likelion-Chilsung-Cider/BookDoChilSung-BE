name: CICD Github Action

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      RDSHOSTNAME: ${{ secrets.RDSHOSTNAME }}
      RDSNAME: ${{ secrets.RDSNAME }}
      RDSUSERNAME: ${{ secrets.RDSUSERNAME }}
      RDSPASSWORD: ${{ secrets.RDSPASSWORD }}
      RDSPORT: ${{ secrets.RDSPORT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 1. 프론트엔드 빌드 단계 추가
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'  # 사용 중인 Node.js 버전에 맞게 설정

      - name: Install dependencies
        working-directory: ./frontend # 프론트엔드 폴더 경로
        run: npm install

      - name: Build frontend
        working-directory: ./frontend # 프론트엔드 폴더 경로
        run: npm run build

      # 2. 빌드된 프론트엔드 파일을 백엔드에 복사
      - name: Copy frontend build to backend
        run: cp -r ./frontend/build ./src/main/resources/static/

      # 네트워크 연결 테스트
      - name: Test RDS Connection
        run: |
          echo "Testing RDS connection..."
          nc -zv ${{ secrets.RDSHOSTNAME }} ${{ secrets.RDSPORT }}
          
      - name: Build with Gradle (Skip Tests)
        run: ./gradlew clean build -x test

      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-SS
          utcOffset: "+09:00"

      # 빌드 후 생성된 파일 목록 확인
      - name: List generated files
        run: ls -al ./build/libs

      - name: Set artifact
        run: |
          echo "artifact=$(find ./build/libs -name '*SNAPSHOT.jar')" >> $GITHUB_ENV

      # 3. 빌드 파일 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:        
         aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
         aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         application_name: bookdochilsung
         environment_name: bookdochilsung-env
         version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
         region: ap-northeast-2
         deployment_package: ${{ env.artifact }}
